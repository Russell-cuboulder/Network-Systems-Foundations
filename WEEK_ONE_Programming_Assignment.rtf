{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier-Oblique;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red51\green110\blue109;\red255\green255\blue255;\red38\green38\blue38;
\red15\green112\blue1;\red0\green0\blue255;\red83\green83\blue83;\red169\green14\blue26;\red151\green0\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c25098\c50196\c50196;\cssrgb\c100000\c100000\c100000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c0\c50196\c0;\cssrgb\c0\c0\c100000;\cssrgb\c40000\c40000\c40000;\cssrgb\c72941\c12941\c12941;\cssrgb\c66667\c7059\c100000;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\i\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # your code here
\f1\i0 \cf4 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf5 \strokec5 from
\f1\b0 \cf4 \strokec4  
\f2\b \cf6 \strokec6 scapy.all
\f1\b0 \cf4 \strokec4  
\f2\b \cf5 \strokec5 import
\f1\b0 \cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 \
\
pkts \cf7 \strokec7 =\cf4 \strokec4  rdpcap(\cf8 \strokec8 "intro-wireshark-trace1.pcap"\cf4 \strokec4 )\
\
pkt \cf7 \strokec7 =\cf4 \strokec4  pkts[\cf7 \strokec7 1\cf4 \strokec4 ]\
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \strokec2 # Do checks on what types are in the packet
\f1\i0 \cf4 \strokec4 \
eth \cf7 \strokec7 =\cf4 \strokec4  Ether 
\f2\b \cf9 \strokec9 in
\f1\b0 \cf4 \strokec4  pkt\
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 print\cf4 \strokec4 (eth)\
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \strokec2 # You can get the name of the layers in the packet (requesting a specific one)
\f1\i0 \cf4 \strokec4 \
layer \cf7 \strokec7 =\cf4 \strokec4  pkt\cf7 \strokec7 .\cf4 \strokec4 getlayer(\cf7 \strokec7 0\cf4 \strokec4 )\
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 print\cf4 \strokec4 (layer)\
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \strokec2 # or, there's a variable within the pkt structure indicating the name of the type
\f1\i0 \cf4 \strokec4 \
exp \cf7 \strokec7 =\cf4 \strokec4  pkt\cf7 \strokec7 .\cf4 \strokec4 name\
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 print\cf4 \strokec4  (exp)\
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \strokec2 # You can list all the available protocols - won't, since it's large
\f1\i0 \cf4 \strokec4 \

\f0\i \cf2 \strokec2 #ls()
\f1\i0 \cf4 \strokec4 \
\

\f0\i \cf2 \strokec2 # Or list the fields in a particular layer
\f1\i0 \cf4 \strokec4 \
ls(Ether)\
\

\f0\i \cf2 \strokec2 # Dump the packet contents in hex
\f1\i0 \cf4 \strokec4 \
hexdump(pkt)\
\

\f0\i \cf2 \strokec2 # Dump the packet in a nice format
\f1\i0 \cf4 \strokec4 \
pkt\cf7 \strokec7 .\cf4 \strokec4 show()\
\

\f0\i \cf2 \strokec2 # You can manipulate the packet through fields
\f1\i0 \cf4 \strokec4 \
\
pkt\cf7 \strokec7 .\cf4 \strokec4 dst \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 "11:22:33:44:55:66"\cf4 \strokec4 \
\
pkt\cf7 \strokec7 .\cf4 \strokec4 show()\
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf5 \strokec5 for
\f1\b0 \cf4 \strokec4  pkt 
\f2\b \cf9 \strokec9 in
\f1\b0 \cf4 \strokec4  pkts:\
    
\f2\b \cf5 \strokec5 if
\f1\b0 \cf4 \strokec4  \cf5 \strokec5 isinstance\cf4 \strokec4 (pkt, Ether):\
        pkt\cf7 \strokec7 .\cf4 \strokec4 src \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 "11:11:11:11:11:11"\cf4 \strokec4 \
        pkt\cf7 \strokec7 .\cf4 \strokec4 dst \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 "22:22:22:22:22:22"\cf4 \strokec4  \
}